// <auto-generated />
using System;
using LoggingSQLDemo2022.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoggingSQLDemo2022.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220104201850_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Name = "CD Project"
                        },
                        new
                        {
                            CompanyId = 2,
                            Name = "Id Software"
                        });
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Realeased")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            DeveloperId = 1,
                            Name = "Witcher: Wild Hunt",
                            Realeased = new DateTime(2015, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 2,
                            DeveloperId = 1,
                            Name = "Cyberpunk 2077",
                            Realeased = new DateTime(2020, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 3,
                            DeveloperId = 2,
                            Name = "Doom",
                            Realeased = new DateTime(1993, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.HasIndex("GameId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            GameId = 1,
                            Text = "RPG"
                        },
                        new
                        {
                            TagId = 2,
                            GameId = 1,
                            Text = "Fantasy"
                        },
                        new
                        {
                            TagId = 3,
                            GameId = 1,
                            Text = "Action"
                        },
                        new
                        {
                            TagId = 4,
                            GameId = 2,
                            Text = "RPG"
                        },
                        new
                        {
                            TagId = 5,
                            GameId = 2,
                            Text = "Cyberpunk"
                        },
                        new
                        {
                            TagId = 6,
                            GameId = 2,
                            Text = "Action"
                        },
                        new
                        {
                            TagId = 7,
                            GameId = 3,
                            Text = "Shooter"
                        },
                        new
                        {
                            TagId = 8,
                            GameId = 3,
                            Text = "Action"
                        },
                        new
                        {
                            TagId = 9,
                            GameId = 3,
                            Text = "Sci-fi"
                        });
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Game", b =>
                {
                    b.HasOne("LoggingSQLDemo2022.Models.Company", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Tag", b =>
                {
                    b.HasOne("LoggingSQLDemo2022.Models.Game", "Game")
                        .WithMany("Tags")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Company", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("LoggingSQLDemo2022.Models.Game", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
